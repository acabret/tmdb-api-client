{"version":3,"sources":["utils/config.js","utils/movies.js","components/MovieCover.js","components/MovieSection.js","components/MovieSearch.js","components/Home.js","components/MovieDetails.js","App.js","index.js"],"names":["appLanguage","baseImageUrl","imageSizes","baseUrl","discoverMovies","language","genre","voteGte","voteLte","dateGte","dateLte","languageKey","genreKey","voteGteKey","voteLteKey","dateGteKey","dateLteKey","fetch","then","response","json","Wrapper","styled","article","StyledLink","Link","MovieImage","div","poster_path","MovieScoreWrapper","MovieScore","span","MovieTitle","h3","MovieCover","movie","to","pathname","id","state","Number","vote_average","toFixed","title","section","MoviesWrapper","SectionTitle","MovieSection","sectionTitle","movies","map","AppTitle","h1","main","SearchWrapper","SearchButton","button","RangeInfo","RangeData","MovieSearch","props","useState","genres","setGenres","selection","setSelection","rangeRatingValues","setRangeRatingValues","Date","getFullYear","rangeReleaseValues","setRangeReleaseValues","useEffect","options","reduce","array","concat","value","label","name","selectStyles","option","provided","color","backgroundColor","control","singleValue","rangeRatingSettings","min","max","step","defaultValue","onChange","values","rangeReleaseSettings","searchMovies","a","searchParams","searchResult","searchSection","setSearchSection","selectedOption","placeholder","styles","style","margin","trackStyle","handleStyle","onClick","Home","sections","className","TitleBar","BackIcon","FaArrowLeft","BackButton","Title","MovieInfo","MovieImageContainer","MovieSpecs","MovieMetaData","MetaDataItem","p","MovieDetails","history","useHistory","location","goBack","release_date","split","overview","App","setSections","console","log","status","Error","catch","err","data","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2accee40.chunk.js","sourcesContent":["export const appLanguage = \"en-US\";\r\nexport const baseImageUrl = \"https://image.tmdb.org/t/p\";\r\nexport const imageSizes = { small: \"/w154\", medium: \"/w300\",large:\"/w780\" };\r\n","import { appLanguage } from \"./config\";\r\nconst baseUrl = \"/api/\";\r\n\r\nexport const initAppData = ({ language }) => {\r\n  return fetch(`${baseUrl}movies/init`)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      }\r\n      throw Error(\"Hubo un error en la conexiÃ³n con el servidor\");\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n//genre, language, voteGte, voteLte, dateGte\r\nexport const discoverMovies = ({\r\n  language = appLanguage,\r\n  genre,\r\n  voteGte,\r\n  voteLte,\r\n  dateGte,\r\n  dateLte,\r\n}) => {\r\n  const languageKey = `?language=${language}`;\r\n  const genreKey = genre ? `&genre=${genre}` : \"\";\r\n  const voteGteKey = voteGte ? `&voteGte=${voteGte}` : \"\";\r\n  const voteLteKey = voteLte ? `&voteLte=${voteLte}` : \"\";\r\n  const dateGteKey = dateGte ? `&dateGte=${dateGte}-01-01` : \"\";\r\n  const dateLteKey = dateLte ? `&dateLte=${dateLte}-12-31` : \"\";\r\n\r\n  return fetch(\r\n    `${baseUrl}movies/discover${languageKey}${genreKey}${voteGteKey}${voteLteKey}${dateGteKey}${dateLteKey}`\r\n  ).then((response) => response.json());\r\n};\r\n","import styled from \"styled-components\";\r\nimport { baseImageUrl, imageSizes } from \"../utils/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.article`\r\n  background-color: hsla(0, 0%, 15%, 1);\r\n  width: 40%;\r\n  margin: 0.5rem;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  transition: transform 0.1s linear;\r\n  @media (min-width: 768px) {\r\n    width: 15%;\r\n  }\r\n  :hover {\r\n    transform: scale(1.03);\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst MovieImage = styled.div`\r\n  position: relative;\r\n  background-image: url(${({ poster_path }) =>\r\n    `${baseImageUrl}${imageSizes.small}${poster_path}`});\r\n  background-position: center;\r\n  background-size: cover;\r\n  padding-top: calc(100% * 16 / 11);\r\n  width: 100%;\r\n`;\r\n\r\nconst MovieScoreWrapper = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  /* transform: translate(50%, -50%); */\r\n  background-color: hsla(53, 100%, 42%, 0.75);\r\n  padding: 0.2rem 0.5rem;\r\n  border-radius: 5px;\r\n  z-index: 1;\r\n`;\r\n\r\nconst MovieScore = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  color: #000;\r\n`;\r\nconst MovieTitle = styled.h3`\r\n  padding: 0.35rem;\r\n  // color: white;\r\n  font-size: 1rem;\r\n  line-height: 1.1rem;\r\n  height: 2.2rem;\r\n  -webkit-line-clamp: 2;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst MovieCover = ({ movie }) => {\r\n  return (\r\n    <Wrapper>\r\n      {/* <StyledLink to={`/movie/${movie.id}`}> */}\r\n      <StyledLink\r\n        to={{ pathname: `/movie/${movie.id}`, state: { movie } }}\r\n      >\r\n        <MovieImage poster_path={movie.poster_path}>\r\n          <MovieScoreWrapper>\r\n            <MovieScore>{Number(movie.vote_average).toFixed(1)}</MovieScore>\r\n          </MovieScoreWrapper>\r\n        </MovieImage>\r\n        <MovieTitle>{movie.title}</MovieTitle>\r\n      </StyledLink>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieCover;\r\n","import styled from \"styled-components\";\r\nimport MovieCover from \"./MovieCover\";\r\n\r\nconst Wrapper = styled.section`\r\n  padding: .5rem 0.25rem;\r\n  background-color: hsla(0, 0%, 6%, 1);\r\n`;\r\n\r\nconst MoviesWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  padding: .5rem 0;\r\n  @media (min-width: 768px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h3`\r\n  font-size: 1.4rem;\r\n  color: hsla(47, 92%, 51%, 1);\r\n`;\r\n\r\nconst MovieSection = ({ sectionTitle, movies }) => {\r\n  // console.log(\"peliculas de \", sectionTitle, \"peliculas\", movies);\r\n  return (\r\n    <Wrapper>\r\n      <SectionTitle>{sectionTitle}</SectionTitle>\r\n      <MoviesWrapper>\r\n        {movies.map((movie) => (\r\n          <MovieCover key={movie.id} movie={movie} />\r\n        ))}\r\n      </MoviesWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieSection;\r\n","import styled from \"styled-components\";\r\nimport Select from \"react-select\";\r\nimport Slider, { Range } from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { discoverMovies } from \"../utils/movies\";\r\n\r\n// const createSliderWithTooltip = Slider.createSliderWithTooltip;\r\n// const Range = createSliderWithTooltip(Slider.Range)\r\nconst AppTitle = styled.h1`\r\n  color: hsla(47, 92%, 51%, 1);\r\n  margin-bottom:1rem;\r\n  `;\r\n\r\nconst Wrapper = styled.main`\r\n  position: relative;\r\n  padding: 1rem 0;\r\n  display: flex;\r\n  flex-direction:column;\r\n  // justify-content: center;\r\n  align-items:center;\r\n  z-index: 2;\r\n`;\r\n\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 60%;\r\n  @media (min-width: 768px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  position: relative;\r\n  display: block;\r\n  height: 3rem;\r\n  width: 100%;\r\n  background-color: hsla(47, 92%, 51%, 1);\r\n  color: black;\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n  font-family: inherit;\r\n  border: none;\r\n  border-radius: 5px;\r\n  transition: transform 0.2s linear;\r\n\r\n  :active {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst RangeInfo = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: white;\r\n  :last-of-type{\r\n    margin-bottom:1rem;\r\n  }\r\n`;\r\n\r\nconst RangeData = styled.span`\r\n  color: hsla(47, 92%, 51%, 1);\r\n`;\r\n\r\nconst MovieSearch = (props) => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selection, setSelection] = useState(null);\r\n  const [rangeRatingValues, setRangeRatingValues] = useState([5, 9]);\r\n  const [rangeReleaseValues, setRangeReleaseValues] = useState([\r\n    1990,\r\n    new Date().getFullYear(),\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const options = props.genres.reduce(\r\n      (array, genre) => array.concat({ value: genre.id, label: genre.name }),\r\n      []\r\n    );\r\n    setGenres([...options]);\r\n  }, [props.genres]);\r\n\r\n  const selectStyles = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      color: \"white\",\r\n      backgroundColor: \"hsla(0, 0%, 15%, 1)\",\r\n    }),\r\n    control: (provided, state) => ({\r\n      // none of react-select's styles are passed to <Control />\r\n      ...provided,\r\n      backgroundColor: \"hsla(0, 0%, 15%, 1)\",\r\n    }),\r\n    singleValue: (provided, state) => ({\r\n      ...provided,\r\n      color: \"hsla(47, 92%, 51%, 1)\",\r\n    }),\r\n  };\r\n\r\n  const handleGenreSelect = (selectedOption) => setSelection(selectedOption);\r\n  const handleRatingRange = (values) => setRangeRatingValues([...values]);\r\n  const handleReleaseRange = (values) => setRangeReleaseValues([...values]);\r\n\r\n  const rangeRatingSettings = {\r\n    min: 1,\r\n    max: 10,\r\n    step: 0.1,\r\n    value: rangeRatingValues,\r\n    defaultValue: rangeRatingValues,\r\n    onChange: handleRatingRange,\r\n  };\r\n\r\n  const rangeReleaseSettings = {\r\n    min: 1900,\r\n    max: new Date().getFullYear(),\r\n    step: 1,\r\n    value: rangeReleaseValues,\r\n    defaultValue: rangeReleaseValues,\r\n    onChange: handleReleaseRange,\r\n  };\r\n\r\n  const searchMovies = async () => {\r\n    const searchParams = {\r\n      voteGte: rangeRatingValues[0],\r\n      voteLte: rangeRatingValues[1],\r\n      genre: selection?.value ? selection.value : \"\",\r\n      dateGte: rangeReleaseValues[0],\r\n      dateLte: rangeReleaseValues[1],\r\n    };\r\n    const searchResult = await discoverMovies(searchParams);\r\n    const searchSection = {\r\n      id: selection?.value ? selection.value : 0,\r\n      name: selection?.label ? selection.label : \"De todos los gÃ©neros\",\r\n      movies: [...searchResult],\r\n    };\r\n\r\n    props.setSearchSection(searchSection);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AppTitle>Muvinext</AppTitle>\r\n      <SearchWrapper>\r\n\r\n        <Select\r\n          onChange={handleGenreSelect}\r\n          options={genres}\r\n          placeholder=\"GÃ©neros\"\r\n          value={selection}\r\n          styles={selectStyles}\r\n        />\r\n        <Range\r\n          style={{ margin: \"1rem 0\" }}\r\n          trackStyle={[{ backgroundColor: \" hsla(47, 92%, 51%, 1)\" }]}\r\n          handleStyle={[\r\n            { backgroundColor: \" hsla(47, 92%, 51%, 1)\" },\r\n            { backgroundColor: \" hsla(47, 92%, 51%, 1)\" },\r\n          ]}\r\n          {...rangeRatingSettings}\r\n        ></Range>\r\n\r\n        <RangeInfo>\r\n          Puntajes entre <RangeData>{rangeRatingValues[0].toFixed(1)}</RangeData> y{\" \"}\r\n          <RangeData>{rangeRatingValues[1].toFixed(1)}</RangeData>\r\n        </RangeInfo>\r\n\r\n        {/* <span>valor min:{rangeRatingValues[0]}</span>\r\n        <p>valor max:{rangeRatingValues[1]}</p> */}\r\n        <Range\r\n          style={{ margin: \"1rem 0\" }}\r\n          trackStyle={[{ backgroundColor: \" hsla(47, 92%, 51%, 1)\" }]}\r\n          handleStyle={[\r\n            { backgroundColor: \" hsla(47, 92%, 51%, 1)\" },\r\n            { backgroundColor: \" hsla(47, 92%, 51%, 1)\" },\r\n          ]}\r\n          {...rangeReleaseSettings}\r\n        ></Range>\r\n\r\n        <RangeInfo>\r\n          Peliculas del aÃ±o <RangeData>{rangeReleaseValues[0]}</RangeData> y{\" \"}\r\n          <RangeData>{rangeReleaseValues[1]}</RangeData>\r\n        </RangeInfo>\r\n        {/* <p>Puntajes entre {rangeReleaseValues[0]}</p>\r\n        <p>valor max aÃ±o:{rangeReleaseValues[1]}</p> */}\r\n        <SearchButton onClick={searchMovies}>Buscar</SearchButton>\r\n      </SearchWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieSearch;\r\n","import MovieSection from \"./MovieSection\";\r\nimport MovieSearch from \"./MovieSearch\";\r\nimport \"../App.css\";\r\n\r\nconst Home = ({genres, sections, searchSection, setSearchSection}) => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MovieSearch genres={genres} setSearchSection={setSearchSection} />\r\n      {searchSection && (\r\n        <MovieSection\r\n          key={searchSection.id}\r\n          sectionTitle={searchSection.name}\r\n          movies={searchSection.movies}\r\n        />\r\n      )}\r\n      {sections.map((section) => (\r\n        <MovieSection\r\n          key={section.id}\r\n          sectionTitle={section.name}\r\n          movies={section.movies}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { baseImageUrl, imageSizes } from \"../utils/config\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: hsla(0, 0%, 6%, 1);\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  height: 3rem;\r\n  background-color: hsla(0, 0%, 15%, 1);\r\n  border-bottom: 1px solid hsla(0, 0%, 25%, 1);\r\n\r\n  @media (min-width: 768px) {\r\n    height: 5rem;\r\n  }\r\n`;\r\n\r\nconst BackIcon = styled(FaArrowLeft)`\r\n  position: relative;\r\n  color: hsla(0, 0%, 40%, 1);\r\n  font-size: 2rem;\r\n  transition: transform 0.1s linear;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 3rem 0 0;\r\n  border-right: 1px solid hsla(0, 0%, 25%, 1);\r\n  @media (min-width: 768px) {\r\n    flex: 10rem 0 0;\r\n  }\r\n\r\n  :hover ${BackIcon} {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  flex-shrink: 0;\r\n  color: #fff;\r\n  padding-left: 0.5rem;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  @media (min-width: 768px) {\r\n    padding-left: 2rem;\r\n    font-size: 2rem;\r\n    font-weight: 900;\r\n  }\r\n`;\r\n\r\nconst MovieInfo = styled.div`\r\n  display: flex;\r\n  //   align-items: flex-start;\r\n  //   flex-direction: row;\r\n  flex-wrap: wrap;\r\n  padding: 1rem;\r\n  //   width: 400px;\r\n  font-size: 1.125rem;\r\n\r\n  @media (min-width: 768px) {\r\n    flex-wrap: nowrap;\r\n    padding: 2rem 5rem;\r\n  }\r\n`;\r\n\r\nconst MovieImageContainer = styled.div`\r\n  width: 100%;\r\n  overflow: hidden;\r\n  border-radius: 5px;\r\n  @media (min-width: 768px) {\r\n    // //   flex-basis:500px;\r\n    // width: 500px;\r\n    width: 30%;\r\n  }\r\n`;\r\n\r\nconst MovieImage = styled.div`\r\n  position: relative;\r\n  background-image: url(${({ poster_path }) =>\r\n    `${baseImageUrl}${imageSizes.large}${poster_path}`});\r\n  background-position: center;\r\n  background-size: cover;\r\n  padding-top: calc(100% * 16 / 11);\r\n  width: 100%;\r\n`;\r\n\r\n// const Test = styled.div`\r\n//   width: 300px;\r\n//   height: 600px;\r\n//   background-color: red;\r\n// `;\r\n\r\nconst MovieSpecs = styled.div`\r\n  color: #fff;\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n  font-weight:600;\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nconst MovieMetaData = styled.div`\r\n  display: flex;\r\n  margin-bottom: .5rem;\r\n`;\r\nconst MetaDataItem = styled.div`\r\n  margin: 0 .5rem;\r\n  color: ${(p)=>p.color ? p.color : \"hsla(0, 0%, 40%, 1)\"};\r\n  font-weight:600;\r\n`;\r\n\r\nconst MovieDetails = () => {\r\n  const history = useHistory();\r\n  const movie = history.location.state.movie;\r\n  const goHome = () => history.goBack();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <TitleBar>\r\n        <BackButton onClick={goHome}>\r\n          <BackIcon />\r\n        </BackButton>\r\n        <Title>{movie.title}</Title>\r\n      </TitleBar>\r\n      <MovieInfo>\r\n        <MovieImageContainer>\r\n          <MovieImage poster_path={movie.poster_path} />\r\n        </MovieImageContainer>\r\n        <MovieSpecs>\r\n          <MovieMetaData>\r\n            <MetaDataItem>{movie.release_date.split(\"-\")[0]}</MetaDataItem>\r\n            <MetaDataItem color={\"hsla(53, 100%, 42%, 1)\"}>{Number(movie.vote_average).toFixed(1)}</MetaDataItem>\r\n          </MovieMetaData>\r\n          <div>{movie.overview}</div>\r\n        </MovieSpecs>\r\n      </MovieInfo>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { initAppData } from \"./utils/movies\";\r\nimport { appLanguage } from \"./utils/config\";\r\nimport \"./App.css\";\r\nimport Home from \"./components/Home\";\r\nimport MovieDetails from \"./components/MovieDetails\";\r\n\r\nfunction App() {\r\n  const [genres, setGenres] = useState([]);\r\n  const [sections, setSections] = useState([]);\r\n  const [searchSection, setSearchSection] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"running use effect\");\r\n    initAppData({ language: appLanguage }).then((data) => {\r\n      setGenres([...data.genres]);\r\n      setSections([...data.sections]);\r\n    });\r\n  }, [appLanguage]);\r\n\r\n  // console.log(\"estado search section\", searchSection);\r\n  // console.log(props);\r\n\r\n  // const history = useHistory();\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/movie/:id\">\r\n          <MovieDetails />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home genres={genres} sections={sections} searchSection={searchSection} setSearchSection={setSearchSection}/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  // return (\r\n  //   <div class=\"App\">\r\n  //     <MovieSearch genres={genres} setSearchSection={setSearchSection} />\r\n  //     {searchSection && (\r\n  //       <MovieSection\r\n  //         key={searchSection.id}\r\n  //         sectionTitle={searchSection.name}\r\n  //         movies={searchSection.movies}\r\n  //       />\r\n  //     )}\r\n  //     {sections.map((section) => (\r\n  //       <MovieSection\r\n  //         key={section.id}\r\n  //         sectionTitle={section.name}\r\n  //         movies={section.movies}\r\n  //       />\r\n  //     ))}\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}