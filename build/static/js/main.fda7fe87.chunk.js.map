{"version":3,"sources":["utils/config.js","utils/movies.js","components/MovieCover.js","components/MovieSection.js","components/MovieSearch.js","App.js","index.js"],"names":["appLanguage","imageSizes","baseUrl","discoverMovies","language","genre","voteGte","voteLte","dateGte","dateLte","languageKey","genreKey","voteGteKey","voteLteKey","dateGteKey","dateLteKey","fetch","then","response","json","Wrapper","styled","article","MovieImage","div","poster_path","MovieScoreWrapper","MovieScore","span","MovieTitle","h3","MovieCover","movie","Number","vote_average","toFixed","title","MoviesWrapper","SectionTitle","MovieSection","sectionTitle","movies","console","log","map","id","main","SearchWrapper","MovieSearch","props","useState","genres","setGenres","selection","setSelection","rangeRatingValues","setRangeRatingValues","Date","getFullYear","rangeReleaseValues","setRangeReleaseValues","useEffect","options","reduce","array","concat","value","label","name","searchMovies","a","searchParams","searchResult","searchSection","setSearchSection","rangeRatingSettings","min","max","step","defaultValue","onChange","values","rangeReleaseSettings","selectedOption","placeholder","onClick","App","sections","setSections","status","Error","catch","err","data","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fda7fe87.chunk.js","sourcesContent":["export const appLanguage = \"en-US\";\r\nexport const baseImageUrl = \"https://image.tmdb.org/t/p\";\r\nexport const imageSizes = { small: \"/w154\", medium: \"/w300\",large:\"/w780\" };\r\n","import { appLanguage } from \"./config\";\r\nconst baseUrl = \"/api/\";\r\n\r\nexport const initAppData = ({ language }) => {\r\n  return fetch(`${baseUrl}movies/init`)\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      }\r\n      throw Error(\"Hubo un error en la conexiÃ³n con el servidor\");\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n//genre, language, voteGte, voteLte, dateGte\r\nexport const discoverMovies = ({\r\n  language = appLanguage,\r\n  genre,\r\n  voteGte,\r\n  voteLte,\r\n  dateGte,\r\n  dateLte,\r\n}) => {\r\n  const languageKey = `?language=${language}`;\r\n  const genreKey = genre ? `&genre=${genre}` : \"\";\r\n  const voteGteKey = voteGte ? `&voteGte=${voteGte}` : \"\";\r\n  const voteLteKey = voteLte ? `&voteLte=${voteLte}` : \"\";\r\n  const dateGteKey = dateGte ? `&dateGte=${dateGte}-01-01` : \"\";\r\n  const dateLteKey = dateLte ? `&dateLte=${dateLte}-12-31` : \"\";\r\n\r\n  return fetch(\r\n    `${baseUrl}movies/discover${languageKey}${genreKey}${voteGteKey}${voteLteKey}${dateGteKey}${dateLteKey}`\r\n  ).then((response) => response.json());\r\n};\r\n","import styled from \"styled-components\";\r\nimport { baseImageUrl, imageSizes } from \"../utils/config\";\r\n\r\nconst Wrapper = styled.article`\r\n  background-color: gray;\r\n  /* width: 11rem; */\r\n  width: 40%;\r\n  margin: 1rem .5rem;\r\n  @media (min-width: 768px) {\r\n    width: 15%;\r\n  }\r\n`;\r\nconst MovieImage = styled.div`\r\n  position: relative;\r\n  background-image: url(${({ poster_path }) =>\r\n    `${baseImageUrl}${imageSizes.small}${poster_path}`});\r\n  background-position: center;\r\n  background-size: cover;\r\n  padding-top: calc( 100% * 16/11);\r\n  width: 100%;\r\n`;\r\n\r\nconst MovieScoreWrapper = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  /* transform: translate(50%, -50%); */\r\n  background-color: hsla(53, 100%, 42%, 1);\r\n  padding: 0.2rem 0.5rem;\r\n  z-index: 10;\r\n`;\r\n\r\nconst MovieScore = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n`;\r\nconst MovieTitle = styled.h3`\r\n  font-size: 1rem ;\r\n\r\n\r\n\r\n`;\r\n\r\nconst MovieCover = ({ movie }) => {\r\n  return (\r\n    <Wrapper>\r\n      <MovieImage poster_path={movie.poster_path}>\r\n        <MovieScoreWrapper>\r\n          <MovieScore>{Number(movie.vote_average).toFixed(1)}</MovieScore>\r\n        </MovieScoreWrapper>\r\n      </MovieImage>\r\n      <MovieTitle>{movie.title}</MovieTitle>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieCover;\r\n","import styled from \"styled-components\";\r\nimport MovieCover from \"./MovieCover\";\r\n\r\nconst MoviesWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  padding: 1rem 0;\r\n  background-color: red;\r\n  @media (min-width: 768px) {\r\n    justify-content:space-around;\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h3`\r\n    font-size: 1.4rem;\r\n    margin-bottom: .75rem;\r\n`;\r\n\r\nconst MovieSection = ({ sectionTitle, movies }) => {\r\n\r\n  console.log(\"peliculas de \", sectionTitle, \"peliculas\", movies);\r\n  return (\r\n    <section>\r\n      <SectionTitle>{sectionTitle}</SectionTitle>\r\n      <MoviesWrapper>\r\n        {movies.map((movie) => (\r\n          <MovieCover key={movie.id} movie={movie} />\r\n        ))}\r\n      </MoviesWrapper>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MovieSection;\r\n","import styled from \"styled-components\";\r\nimport Select from \"react-select\";\r\nimport Slider, { Range } from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { discoverMovies } from \"../utils/movies\";\r\n\r\n// const createSliderWithTooltip = Slider.createSliderWithTooltip;\r\n// const Range = createSliderWithTooltip(Slider.Range)\r\n\r\nconst Wrapper = styled.main`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SearchWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 60%;\r\n  @media (min-width: 768px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst MovieSearch = (props) => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selection, setSelection] = useState(null);\r\n  const [rangeRatingValues, setRangeRatingValues] = useState([5, 9]);\r\n  const [rangeReleaseValues, setRangeReleaseValues] = useState([\r\n    1990,\r\n    new Date().getFullYear(),\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const options = props.genres.reduce(\r\n      (array, genre) => array.concat({ value: genre.id, label: genre.name }),\r\n      []\r\n    );\r\n    setGenres([...options]);\r\n  }, [props.genres]);\r\n\r\n  const searchMovies = async () => {\r\n    const searchParams = {\r\n      voteGte: rangeRatingValues[0],\r\n      voteLte: rangeRatingValues[1],\r\n      genre: selection?.value ? selection.value : \"\",\r\n      dateGte: rangeReleaseValues[0],\r\n      dateLte: rangeReleaseValues[1],\r\n    };\r\n    //corregir en caso de no seleccionar ningun genero\r\n\r\n    const searchResult = await discoverMovies(searchParams);\r\n    console.log(searchResult);\r\n\r\n    const searchSection = {\r\n      id: selection?.value ? selection.value : 0,\r\n      name: selection?.label ? selection.label : \"De todos los gÃ©neros\",\r\n      movies: [...searchResult],\r\n    };\r\n\r\n    props.setSearchSection(searchSection);\r\n\r\n    // console.log(searchResult);\r\n  };\r\n\r\n  const handleGenreSelect = (selectedOption) => {\r\n    console.log(selectedOption);\r\n    setSelection(selectedOption);\r\n  };\r\n\r\n  const handleRatingRange = (values) => setRangeRatingValues([...values]);\r\n  const handleReleaseRange = (values) => setRangeReleaseValues([...values]);\r\n\r\n  const rangeRatingSettings = {\r\n    min: 1,\r\n    max: 10,\r\n    step: 0.1,\r\n    value: rangeRatingValues,\r\n    defaultValue: rangeRatingValues,\r\n    onChange: handleRatingRange,\r\n  };\r\n\r\n  const rangeReleaseSettings = {\r\n    min: 1900,\r\n    max: new Date().getFullYear(),\r\n    step: 1,\r\n    value: rangeReleaseValues,\r\n    defaultValue: rangeReleaseValues,\r\n    onChange: handleReleaseRange,\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SearchWrapper>\r\n        <Select\r\n          onChange={handleGenreSelect}\r\n          options={genres}\r\n          placeholder=\"GÃ©neros\"\r\n          value={selection}\r\n        />\r\n        <Range {...rangeRatingSettings}></Range>\r\n        <p>valor min:{rangeRatingValues[0]}</p>\r\n        <p>valor max:{rangeRatingValues[1]}</p>\r\n        <Range {...rangeReleaseSettings}></Range>\r\n        <p>valor min aÃ±o:{rangeReleaseValues[0]}</p>\r\n        <p>valor max aÃ±o:{rangeReleaseValues[1]}</p>\r\n        <button onClick={searchMovies}>Buscar</button>\r\n      </SearchWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieSearch;\r\n","import { useState, useEffect } from \"react\";\r\nimport { initAppData } from \"./utils/movies\";\r\nimport { appLanguage } from \"./utils/config\";\r\nimport MovieSection from \"./components/MovieSection\";\r\nimport MovieSearch from \"./components/MovieSearch\"\r\n\r\nfunction App() {\r\n  const [genres, setGenres] = useState([]);\r\n  const [sections, setSections] = useState([]);\r\n  const [searchSection, setSearchSection] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"running use effect\");\r\n    initAppData({ language: appLanguage }).then((data) => {\r\n      setGenres([...data.genres]);\r\n      setSections([...data.sections]);\r\n    });\r\n  }, [appLanguage]);\r\n\r\nconsole.log(\"estado search section\",searchSection);\r\n\r\n  return (\r\n    <div>\r\n      <MovieSearch genres={genres} setSearchSection={setSearchSection}/>\r\n      {searchSection && <MovieSection key={searchSection.id} sectionTitle={searchSection.name} movies={searchSection.movies}/>}\r\n      {sections.map((section) => (\r\n        <MovieSection key={section.id} sectionTitle={section.name} movies={section.movies} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}